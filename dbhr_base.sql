DROP DATABASE IF EXISTS dbhr;
CREATE DATABASE dbhr;
USE dbhr;

SET SQL_MODE='ALLOW_INVALID_DATES'; -- Allow '0000-00-00'

CREATE TABLE regions (
	REGION_ID DECIMAL(10,0),
    REGION_NAME VARCHAR(25),
    PRIMARY KEY (REGION_ID)
);

CREATE TABLE countries (
	COUNTRY_ID VARCHAR(2),
    COUNTRY_NAME VARCHAR(40),
    REGION_ID DECIMAL(10,0),
    PRIMARY KEY (COUNTRY_ID)
    -- FOREIGN KEY (REGION_ID) REFERENCES regions(REGION_ID)
);

CREATE TABLE jobs (
	JOB_ID VARCHAR(10),
    JOB_TITLE VARCHAR(35),
    MIN_SALARY DECIMAL(6,0),
    MAX_SALARY DECIMAL(6,0),
    PRIMARY KEY (JOB_ID)
);

CREATE TABLE locations (
	LOCATION_ID DECIMAL(4,0),
    STREET_ADDRESS VARCHAR(40),
    POSTAL_CODE VARCHAR(12),
    CITY VARCHAR(30),
    STATE_PROVINCE VARCHAR(25),
    COUNTRY_ID VARCHAR(2),
    PRIMARY KEY (LOCATION_ID)
    -- FOREIGN KEY (COUNTRY_ID) REFERENCES countries(COUNTRY_ID)
);

CREATE TABLE departments (
	DEPARTMENT_ID DECIMAL(4,0),
    DEPARTMENT_NAME VARCHAR(30),
    MANAGER_ID DECIMAL(6,0),
    LOCATION_ID DECIMAL(4,0),
    PRIMARY KEY (DEPARTMENT_ID)
    -- FOREIGN KEY (LOCATION_ID) REFERENCES locations(LOCATION_ID)
);

CREATE TABLE employees (
	EMPLOYEE_ID DECIMAL(6,0),
    FIRST_NAME VARCHAR(20),
    LAST_NAME VARCHAR(25),
    EMAIL VARCHAR(25),
    PHONE_NUMBER VARCHAR(20),
    HIRE_DATE DATE,
    JOB_ID VARCHAR(10),
    SALARY DECIMAL(8,2),
    COMMISSION_PCT DECIMAL(2,2),
    MANAGER_ID DECIMAL(6,0),
    DEPARTMENT_ID DECIMAL(4,0),
    PRIMARY KEY (EMPLOYEE_ID)
    -- FOREIGN KEY (JOB_ID) REFERENCES jobs(JOB_ID),
    -- FOREIGN KEY (MANAGER_ID) REFERENCES employees(EMPLOYEE_ID),
    -- FOREIGN KEY (DEPARTMENT_ID) REFERENCES departments(DEPARTMENT_ID)
);

-- ALTER TABLE departments
-- ADD FOREIGN KEY (MANAGER_ID) REFERENCES employees(MANAGER_ID);

CREATE TABLE job_history (
	EMPLOYEE_ID DECIMAL(6,0),
    START_DATE DATE,
    END_DATE DATE,
    JOB_ID VARCHAR(10),
    DEPARTMENT_ID DECIMAL(4,0),
    PRIMARY KEY (EMPLOYEE_ID, START_DATE)
    -- FOREIGN KEY (EMPLOYEE_ID) REFERENCES employees(EMPLOYEE_ID),
    -- FOREIGN KEY (DEPARTMENT_ID) REFERENCES departments(DEPARTMENT_ID)
);
